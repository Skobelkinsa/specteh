$font: "fonts/"
// Replace
@function str-replace($string, $search, $replace: "")
  $index: str-index($string, $search)
  @if $index
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace)
  @return $string

// Background gradients mixins
@mixin bg-radial($start-colour, $start-position, $end-colour, $end-position)
  background: -moz-radial-gradient(center, ellipse cover, $start-colour $start-position, $end-colour $end-position)
  background: -webkit-gradient(radial, center center, 0px, center center, 100%, Colour-stop($start-position,$start-colour), Colour-stop($end-position,$end-colour))
  background: -webkit-radial-gradient(center, ellipse cover, $start-colour $start-position,$end-colour $end-position)
  background: -o-radial-gradient(center, ellipse cover, $start-colour $start-position,$end-colour $end-position)
  background: -ms-radial-gradient(center, ellipse cover, $start-colour $start-position,$end-colour $end-position)
  background: radial-gradient(ellipse at center, $start-colour $start-position,$end-colour $end-position)
@mixin bg-horizontal($start-colour, $start-position, $end-colour, $end-position)
  background: $start-colour
  background: -moz-linear-gradient(left, $start-colour $start-position, $end-colour $end-position)
  background: -webkit-linear-gradient(left, $start-colour $start-position,$end-colour $end-position)
  background: linear-gradient(to right, $start-colour $start-position,$end-colour $end-position)
@mixin bg-vertical($start-colour, $start-position, $end-colour, $end-position)
  background: $start-colour
  background: -moz-linear-gradient(top, $start-colour $start-position, $end-colour $end-position)
  background: -webkit-linear-gradient(top, $start-colour $start-position,$end-colour $end-position)
  background: linear-gradient(to bottom, $start-colour $start-position,$end-colour $end-position)


// Mixins
@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg)
  $src: null
  $extmods: (eot: "?", svg: "#" + str-replace($name, " ", "_"))
  $formats: (otf: "opentype", ttf: "truetype")
  @each $ext in $exts
    $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext)
    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext)
    $src: append($src, url(quote($font + $path + "." + $extmod)) format(quote($format)), comma)
  @font-face
    font-family: quote($name)
    font-style: $style
    font-weight: $weight
    src: $src

// Material Style box shadow and hover

@mixin material_shadow($type)
  transition: -webkit-box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)
  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)
  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)
  -webkit-transition: -webkit-box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)
  @if $type == button
    -webkit-box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12)
    box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12)
  @else if $type == light
    -webkit-box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12)
    box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12)
  @else if $type == hover
    -webkit-box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12)
    box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12)

@mixin panel-variant($border, $heading-text-color, $heading-bg-color, $heading-border)
  border-color: $border
  & > .panel-heading
    color: $heading-text-color
    background-color: $heading-bg-color
    border-color: $heading-border
    + .panel-collapse > .panel-body
      border-top-color: $border
    .badge
      color: $heading-bg-color
      background-color: $heading-text-color
  & > .panel-footer
    + .panel-collapse > .panel-body
      border-bottom-color: $border

@mixin plaseholder_color($place_colors)
  ::-webkit-input-placeholder
    color: $place_colors
  ::-moz-placeholder
    color: $place_colors
  :-moz-placeholder
    color: $place_colors
  :-ms-input-placeholder
    color: $place_colors

@mixin grayscale($value)
  -webkit-filter: grayscale($value)
  filter: grayscale($value)